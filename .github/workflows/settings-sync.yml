name: Repo Setup
on:
  push:
    branches:
      - main
  schedule:
    - cron: 0 1 * * *
  workflow_dispatch:
env:
  ACTIONS_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

  list_repos:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.repos.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Get repositories
        id: repos
        run: |
          repos=$(./scripts.sh get_all_repos "${{ env.ACTIONS_TOKEN }}")

          echo "matrix={\"repo\":$(echo ${repos})}" >> "$GITHUB_OUTPUT"

  apply_settings:
    runs-on: ubuntu-latest
    needs:
      - list_repos
      - shellcheck
    strategy:
      matrix: ${{ fromJSON(needs.list_repos.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Check for custom settings
        id: settings
        run: |
          custom_settings=$(./scripts.sh get_file_from_repo "${{ env.ACTIONS_TOKEN }}" "${{ matrix.repo }}" ".github-settings.json" || echo "{}")

          echo $custom_settings > /tmp/custom_settings.json

          settings=$(jq -s '.[0] * .[1]' ./settings.json /tmp/custom_settings.json)

          echo "settings=$(echo "${settings}" | jq -rc)" >> "$GITHUB_OUTPUT"
          echo "apply_update=$(echo "${settings}" | jq -r '.ignore |= not | .ignore')" >> "$GITHUB_OUTPUT"

      - name: Apply settings
        if: ${{ fromJSON(steps.settings.outputs.apply_update) }}
        run: |
          ./scripts.sh apply_repo_update \
            "${{ env.ACTIONS_TOKEN }}" \
            "${{ matrix.repo }}" \
            "$(echo '${{ steps.settings.outputs.settings }}' | jq -rc '.repo')"
